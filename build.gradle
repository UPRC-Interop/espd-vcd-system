/**
 * Copyright 2016-2020 University of Piraeus Research Center
 * <p>
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * <p>
 *     http://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'gradle.plugin.com.hierynomus.gradle.plugins:license-gradle-plugin:0.16.1'
    }
}

subprojects { project ->
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: "com.github.hierynomus.license"

    version = '2.1.0'
    group = 'eu.espdint.espdvcd'
    
    project.ext.webappDir = "$rootProject.projectDir/designer/designer-frontend"
    project.ext.slf4j_version = '1.7.13'
    project.ext.log4j2_version = '2.16.0'
    project.ext.jaxb_impl_version = '2.2.11'
    project.ext.jaxb_api_version = '2.2.12'

    project.ext.libraries = [
            /* logging */
            slf4j_api       : "org.slf4j:slf4j-api:${project.slf4j_version}",
            log4j_slf4j_impl: "org.apache.logging.log4j:log4j-slf4j-impl:${project.log4j2_version}",
            log4j_core      : "org.apache.logging.log4j:log4j-core:${project.log4j2_version}",
            log4j_api       : "org.apache.logging.log4j:log4j-api:${project.log4j2_version}"
    ]

    repositories {
        mavenCentral()
    }

    license {
        header = rootProject.file('LICENSE-HEADER-2.0.txt')
        ext.year = '2016-2020'
        ext.name = 'University of Piraeus Research Center'
        excludes(["**/*.xlsx", "**/*.xml", "**/*.xsl", "**/*.doc", "**/*.pdf", "**/*.jks", "**/*.gc", "**/*.cva", "**/*.sch", "**/*.xslt", "**/*.xjb"])
        skipExistingHeaders = true
        ignoreFailures = true
    }

    test{
        maxHeapSize = "512m"
    }

}

// publishing definition
configure(subprojects - project(':designer')) {
    task sourceJar(type: Jar) {
        classifier "sources"
        from sourceSets.main.allJava
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java

                artifact sourceJar
                artifact javadocJar

            }

        }
    }

    publishing {
        repositories {
            maven {
                url "http://nexus.e-sens.gr/content/repositories/${project.version.endsWith('-SNAPSHOT') ? 'snapshots' : 'releases'}/"
//                credentials {
//                    username 'username'
//                    password 'password'
//                }
            }
        }
    }
}

// 
// global definition of compile dependency
// for project logging
configure(subprojects)
        {
            dependencies {
                implementation libraries.slf4j_api
                implementation libraries.log4j_slf4j_impl
                implementation libraries.log4j_core
                implementation libraries.log4j_api
                implementation 'com.google.guava:guava:14.0'
                testImplementation group: 'junit', name: 'junit', version: '4.12'
            }
        }


task licenseFormatDesignerFrontend(type: com.hierynomus.gradle.license.tasks.LicenseFormat) {
    source = fileTree(dir: "designer/designer-frontend/src").exclude(["**/*.json", "**/*.ico"])

    license {
        header = rootProject.file('LICENSE-HEADER-2.0.txt')
        ext.year = '2016-2020'
        ext.name = 'University of Piraeus Research Center'
        skipExistingHeaders = true
        ignoreFailures = true
    }
}

licenseFormat.dependsOn licenseFormatDesignerFrontend
